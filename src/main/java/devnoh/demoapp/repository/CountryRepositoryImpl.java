package devnoh.demoapp.repository;

import devnoh.demoapp.domain.Country;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.cache.annotation.CacheConfig;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by Sehwan Noh on 11/2/16.
 */
@Component
@CacheConfig(cacheNames = "countries")
public class CountryRepositoryImpl implements CountryRepository {

    private static final Logger logger = LoggerFactory.getLogger(CountryRepositoryImpl.class);
    private static List<Country> countries = new ArrayList<>();

    static {
        addCountry("AF", "Afghanistan");
        addCountry("AL", "Albania");
        addCountry("DZ", "Algeria");
        addCountry("AS", "American Samoa");
        addCountry("AD", "Andorra");
        addCountry("AO", "Angola");
        addCountry("AI", "Anguilla");
        addCountry("AQ", "Antarctica");
        addCountry("AG", "Antigua & Barbuda");
        addCountry("AR", "Argentina");
        addCountry("AM", "Armenia");
        addCountry("AW", "Aruba");
        addCountry("AU", "Australia");
        addCountry("AT", "Austria");
        addCountry("AZ", "Azerbaijan");
        addCountry("BS", "Bahamas");
        addCountry("BH", "Bahrain");
        addCountry("BD", "Bangladesh");
        addCountry("BB", "Barbados");
        addCountry("BY", "Belarus");
        addCountry("BE", "Belgium");
        addCountry("BZ", "Belize");
        addCountry("BJ", "Benin");
        addCountry("BM", "Bermuda");
        addCountry("BT", "Bhutan");
        addCountry("BO", "Bolivia");
        addCountry("BA", "Bosnia");
        addCountry("BW", "Botswana");
        addCountry("BV", "Bouvet Island");
        addCountry("BR", "Brazil");
        addCountry("IO", "British Indian Ocean Territory");
        addCountry("VG", "British Virgin Islands");
        addCountry("BN", "Brunei");
        addCountry("BG", "Bulgaria");
        addCountry("BF", "Burkina Faso");
        addCountry("BI", "Burundi");
        addCountry("KH", "Cambodia");
        addCountry("CM", "Cameroon");
        addCountry("CA", "Canada");
        addCountry("CV", "Cape Verde");
        addCountry("BQ", "Caribbean Netherlands");
        addCountry("KY", "Cayman Islands");
        addCountry("CF", "Central African Republic");
        addCountry("TD", "Chad");
        addCountry("CL", "Chile");
        addCountry("CN", "China");
        addCountry("CX", "Christmas Island");
        addCountry("CC", "Cocos (Keeling) Islands");
        addCountry("CO", "Colombia");
        addCountry("KM", "Comoros");
        addCountry("CG", "Congo - Brazzaville");
        addCountry("CD", "Congo - Kinshasa");
        addCountry("CK", "Cook Islands");
        addCountry("CR", "Costa Rica");
        addCountry("HR", "Croatia");
        addCountry("CU", "Cuba");
        addCountry("CW", "Curaçao");
        addCountry("CY", "Cyprus");
        addCountry("CZ", "Czechia");
        addCountry("CI", "Côte d’Ivoire");
        addCountry("DK", "Denmark");
        addCountry("DJ", "Djibouti");
        addCountry("DM", "Dominica");
        addCountry("DO", "Dominican Republic");
        addCountry("EC", "Ecuador");
        addCountry("EG", "Egypt");
        addCountry("SV", "El Salvador");
        addCountry("GQ", "Equatorial Guinea");
        addCountry("ER", "Eritrea");
        addCountry("EE", "Estonia");
        addCountry("ET", "Ethiopia");
        addCountry("FK", "Falkland Islands");
        addCountry("FO", "Faroe Islands");
        addCountry("FJ", "Fiji");
        addCountry("FI", "Finland");
        addCountry("FR", "France");
        addCountry("GF", "French Guiana");
        addCountry("PF", "French Polynesia");
        addCountry("TF", "French Southern Territories");
        addCountry("GA", "Gabon");
        addCountry("GM", "Gambia");
        addCountry("GE", "Georgia");
        addCountry("DE", "Germany");
        addCountry("GH", "Ghana");
        addCountry("GI", "Gibraltar");
        addCountry("GR", "Greece");
        addCountry("GL", "Greenland");
        addCountry("GD", "Grenada");
        addCountry("GP", "Guadeloupe");
        addCountry("GU", "Guam");
        addCountry("GT", "Guatemala");
        addCountry("GG", "Guernsey");
        addCountry("GN", "Guinea");
        addCountry("GW", "Guinea-Bissau");
        addCountry("GY", "Guyana");
        addCountry("HT", "Haiti");
        addCountry("HM", "Heard & McDonald Islands");
        addCountry("HN", "Honduras");
        addCountry("HK", "Hong Kong");
        addCountry("HU", "Hungary");
        addCountry("IS", "Iceland");
        addCountry("IN", "India");
        addCountry("ID", "Indonesia");
        addCountry("IR", "Iran");
        addCountry("IQ", "Iraq");
        addCountry("IE", "Ireland");
        addCountry("IM", "Isle of Man");
        addCountry("IL", "Israel");
        addCountry("IT", "Italy");
        addCountry("JM", "Jamaica");
        addCountry("JP", "Japan");
        addCountry("JE", "Jersey");
        addCountry("JO", "Jordan");
        addCountry("KZ", "Kazakhstan");
        addCountry("KE", "Kenya");
        addCountry("KI", "Kiribati");
        addCountry("KW", "Kuwait");
        addCountry("KG", "Kyrgyzstan");
        addCountry("LA", "Laos");
        addCountry("LV", "Latvia");
        addCountry("LB", "Lebanon");
        addCountry("LS", "Lesotho");
        addCountry("LR", "Liberia");
        addCountry("LY", "Libya");
        addCountry("LI", "Liechtenstein");
        addCountry("LT", "Lithuania");
        addCountry("LU", "Luxembourg");
        addCountry("MO", "Macau");
        addCountry("MK", "Macedonia");
        addCountry("MG", "Madagascar");
        addCountry("MW", "Malawi");
        addCountry("MY", "Malaysia");
        addCountry("MV", "Maldives");
        addCountry("ML", "Mali");
        addCountry("MT", "Malta");
        addCountry("MH", "Marshall Islands");
        addCountry("MQ", "Martinique");
        addCountry("MR", "Mauritania");
        addCountry("MU", "Mauritius");
        addCountry("YT", "Mayotte");
        addCountry("MX", "Mexico");
        addCountry("FM", "Micronesia");
        addCountry("MD", "Moldova");
        addCountry("MC", "Monaco");
        addCountry("MN", "Mongolia");
        addCountry("ME", "Montenegro");
        addCountry("MS", "Montserrat");
        addCountry("MA", "Morocco");
        addCountry("MZ", "Mozambique");
        addCountry("MM", "Myanmar");
        addCountry("NA", "Namibia");
        addCountry("NR", "Nauru");
        addCountry("NP", "Nepal");
        addCountry("NL", "Netherlands");
        addCountry("NC", "New Caledonia");
        addCountry("NZ", "New Zealand");
        addCountry("NI", "Nicaragua");
        addCountry("NE", "Niger");
        addCountry("NG", "Nigeria");
        addCountry("NU", "Niue");
        addCountry("NF", "Norfolk Island");
        addCountry("KP", "North Korea");
        addCountry("MP", "Northern Mariana Islands");
        addCountry("NO", "Norway");
        addCountry("OM", "Oman");
        addCountry("PK", "Pakistan");
        addCountry("PW", "Palau");
        addCountry("PS", "Palestine");
        addCountry("PA", "Panama");
        addCountry("PG", "Papua New Guinea");
        addCountry("PY", "Paraguay");
        addCountry("PE", "Peru");
        addCountry("PH", "Philippines");
        addCountry("PN", "Pitcairn Islands");
        addCountry("PL", "Poland");
        addCountry("PT", "Portugal");
        addCountry("PR", "Puerto Rico");
        addCountry("QA", "Qatar");
        addCountry("RO", "Romania");
        addCountry("RU", "Russia");
        addCountry("RW", "Rwanda");
        addCountry("RE", "Réunion");
        addCountry("WS", "Samoa");
        addCountry("SM", "San Marino");
        addCountry("SA", "Saudi Arabia");
        addCountry("SN", "Senegal");
        addCountry("RS", "Serbia");
        addCountry("SC", "Seychelles");
        addCountry("SL", "Sierra Leone");
        addCountry("SG", "Singapore");
        addCountry("SX", "Sint Maarten");
        addCountry("SK", "Slovakia");
        addCountry("SI", "Slovenia");
        addCountry("SB", "Solomon Islands");
        addCountry("SO", "Somalia");
        addCountry("ZA", "South Africa");
        addCountry("GS", "South Georgia & South Sandwich Islands");
        addCountry("KR", "South Korea");
        addCountry("SS", "South Sudan");
        addCountry("ES", "Spain");
        addCountry("LK", "Sri Lanka");
        addCountry("BL", "St. Barthélemy");
        addCountry("SH", "St. Helena");
        addCountry("KN", "St. Kitts & Nevis");
        addCountry("LC", "St. Lucia");
        addCountry("MF", "St. Martin");
        addCountry("PM", "St. Pierre & Miquelon");
        addCountry("VC", "St. Vincent & Grenadines");
        addCountry("SD", "Sudan");
        addCountry("SR", "Suriname");
        addCountry("SJ", "Svalbard & Jan Mayen");
        addCountry("SZ", "Swaziland");
        addCountry("SE", "Sweden");
        addCountry("CH", "Switzerland");
        addCountry("SY", "Syria");
        addCountry("ST", "São Tomé & Príncipe");
        addCountry("TW", "Taiwan");
        addCountry("TJ", "Tajikistan");
        addCountry("TZ", "Tanzania");
        addCountry("TH", "Thailand");
        addCountry("TL", "Timor-Leste");
        addCountry("TG", "Togo");
        addCountry("TK", "Tokelau");
        addCountry("TO", "Tonga");
        addCountry("TT", "Trinidad & Tobago");
        addCountry("TN", "Tunisia");
        addCountry("TR", "Turkey");
        addCountry("TM", "Turkmenistan");
        addCountry("TC", "Turks & Caicos Islands");
        addCountry("TV", "Tuvalu");
        addCountry("UM", "U.S. Outlying Islands");
        addCountry("VI", "U.S. Virgin Islands");
        addCountry("GB", "UK");
        addCountry("US", "US");
        addCountry("UG", "Uganda");
        addCountry("UA", "Ukraine");
        addCountry("AE", "United Arab Emirates");
        addCountry("UY", "Uruguay");
        addCountry("UZ", "Uzbekistan");
        addCountry("VU", "Vanuatu");
        addCountry("VA", "Vatican City");
        addCountry("VE", "Venezuela");
        addCountry("VN", "Vietnam");
        addCountry("WF", "Wallis & Futuna");
        addCountry("EH", "Western Sahara");
        addCountry("YE", "Yemen");
        addCountry("ZM", "Zambia");
        addCountry("ZW", "Zimbabwe");
        addCountry("AX", "Åland Islands");
    }

    private static void addCountry(String code, String name) {
        Country country = new Country(code, name);
        countries.add(country);
    }

    @Cacheable(value="countries")
    public Country findByCode(String code) {
        logger.info("Finding country by code '{}'...", code);
        simulateSlowService();
        return countries.stream().filter(c -> c.getCode().equalsIgnoreCase(code)).findFirst().orElse(null);
    }

    private void simulateSlowService() {
        try {
            long time = 1000L;
            Thread.sleep(time);
        } catch (InterruptedException e) {
            throw new IllegalStateException(e);
        }
    }
}
